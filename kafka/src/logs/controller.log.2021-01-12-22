[2021-01-12 22:38:51,969] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@b065c63, name=log4j:logger=kafka.controller (kafka.controller)
[2021-01-12 22:39:06,953] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:39:06,973] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-01-12 22:39:06,979] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-01-12 22:39:07,018] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-01-12 22:39:07,020] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-01-12 22:39:07,022] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-01-12 22:39:07,024] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-01-12 22:39:07,032] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 24) (kafka.controller.KafkaController)
[2021-01-12 22:39:07,034] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:39:07,038] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-01-12 22:39:07,041] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-01-12 22:39:07,042] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:39:07,043] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-01-12 22:39:07,043] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-01-12 22:39:07,043] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-01-12 22:39:07,044] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,045] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,045] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-01-12 22:39:07,045] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-01-12 22:39:07,046] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-01-12 22:39:07,053] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:39:07,054] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:39:07,057] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:39:07,057] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:39:07,057] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:39:07,058] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:39:07,059] INFO [RequestSendThread controllerId=0] Controller 0 connected to ezhivkov:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-01-12 22:39:07,060] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:39:07,061] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-01-12 22:39:07,064] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,064] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,065] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,065] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-01-12 22:39:07,065] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-01-12 22:39:07,072] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-01-12 22:39:12,074] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-01-12 22:39:12,074] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-01-12 22:43:34,535] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2021-01-12 22:43:34,536] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2021-01-12 22:43:34,536] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2021-01-12 22:43:34,537] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2021-01-12 22:43:35,915] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:43:35,916] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:43:35,916] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:43:35,917] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2021-01-12 22:43:35,918] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:43:35,921] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:43:35,922] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:43:35,923] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2021-01-12 22:43:35,923] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2021-01-12 22:43:35,923] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2021-01-12 22:43:35,926] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2021-01-12 22:48:33,927] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@b065c63, name=log4j:logger=kafka.controller (kafka.controller)
[2021-01-12 22:49:22,138] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:49:22,156] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2021-01-12 22:49:22,157] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-01-12 22:49:22,160] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-01-12 22:49:22,162] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-01-12 22:49:22,163] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-01-12 22:49:22,169] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 61) (kafka.controller.KafkaController)
[2021-01-12 22:49:22,171] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:49:22,174] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-01-12 22:49:22,180] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-01-12 22:49:22,181] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:49:22,181] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-01-12 22:49:22,181] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-01-12 22:49:22,182] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-01-12 22:49:22,183] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,183] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,184] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-01-12 22:49:22,185] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-01-12 22:49:22,185] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-01-12 22:49:22,191] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:49:22,194] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:49:22,196] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:49:22,196] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:49:22,197] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:49:22,197] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:49:22,198] INFO [RequestSendThread controllerId=0] Controller 0 connected to ezhivkov:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-01-12 22:49:22,199] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:49:22,199] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2021-01-12 22:49:22,203] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,203] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,203] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,204] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-01-12 22:49:22,204] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-01-12 22:49:22,210] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-01-12 22:49:27,212] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-01-12 22:49:27,213] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-01-12 22:50:11,060] INFO [Controller id=0] New topics: [Set(quickstart-events)], deleted topics: [HashSet()], new partition replica assignment [Map(quickstart-events-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-01-12 22:50:11,060] INFO [Controller id=0] New partition creation callback for quickstart-events-0 (kafka.controller.KafkaController)
[2021-01-12 22:52:20,777] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2021-01-12 22:52:20,778] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2021-01-12 22:52:20,778] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2021-01-12 22:52:20,779] TRACE [Controller id=0] All leaders = quickstart-events-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2021-01-12 22:52:22,043] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:52:22,045] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:52:22,044] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:52:22,045] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2021-01-12 22:52:22,046] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:52:22,049] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:52:22,050] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:52:22,051] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2021-01-12 22:52:22,051] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2021-01-12 22:52:22,051] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2021-01-12 22:52:22,056] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2021-01-12 22:52:31,503] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@b065c63, name=log4j:logger=kafka.controller (kafka.controller)
[2021-01-12 22:52:36,020] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-01-12 22:52:36,035] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2021-01-12 22:52:36,036] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2021-01-12 22:52:36,039] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-01-12 22:52:36,041] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-01-12 22:52:36,042] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2021-01-12 22:52:36,047] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 86) (kafka.controller.KafkaController)
[2021-01-12 22:52:36,053] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:52:36,058] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2021-01-12 22:52:36,064] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2021-01-12 22:52:36,065] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2021-01-12 22:52:36,065] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2021-01-12 22:52:36,065] INFO [Controller id=0] Current list of topics in the cluster: HashSet(quickstart-events) (kafka.controller.KafkaController)
[2021-01-12 22:52:36,065] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-01-12 22:52:36,068] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,069] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,069] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-01-12 22:52:36,069] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2021-01-12 22:52:36,070] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2021-01-12 22:52:36,076] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:52:36,080] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:52:36,082] INFO [RequestSendThread controllerId=0] Controller 0 connected to ezhivkov:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-01-12 22:52:36,090] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:52:36,090] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=quickstart-events,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2021-01-12 22:52:36,090] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:52:36,096] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:52:36,097] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(quickstart-events-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2021-01-12 22:52:36,097] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2021-01-12 22:52:36,108] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,108] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,108] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,109] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-01-12 22:52:36,109] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-01-12 22:52:36,118] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-01-12 22:52:41,120] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-01-12 22:52:41,121] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-01-12 22:52:41,126] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2021-01-12 22:52:41,127] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2021-01-12 22:53:26,314] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-01-12 22:53:26,315] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-01-12 22:57:41,127] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-01-12 22:57:41,128] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-01-12 22:57:41,132] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2021-01-12 22:57:41,132] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
